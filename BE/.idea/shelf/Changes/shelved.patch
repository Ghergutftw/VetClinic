Index: ../FE/src/app/animal-list/create-animal/create-animal.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\nimport {Animal} from \"../animal-list.component\";\r\nimport {DataService} from \"../../service/data.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-create-animal',\r\n  templateUrl: './create-animal.component.html',\r\n  styleUrls: ['./create-animal.component.css']\r\n})\r\nexport class CreateAnimalComponent {\r\n\r\n  createdAnimal !: Animal\r\n  speciesOptions: string[] = [];\r\n\r\n  constructor(\r\n    private service : DataService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.createdAnimal = new Animal(0, \"\", \"\", \"\", 0, 0)\r\n  }\r\n\r\n  updateSpecies() {\r\n    // Add logic to fetch top 5 species based on the selected animalType\r\n    // For simplicity, I'll provide a sample data for each animalType\r\n    switch (this.createdAnimal.animalType) {\r\n      case 'Cat':\r\n        this.speciesOptions = ['Siamese', 'Persian', 'Maine Coon', 'Ragdoll', 'Bengal'];\r\n        break;\r\n      case 'Dog':\r\n        this.speciesOptions = ['Labrador Retriever', 'German Shepherd', 'Golden Retriever', 'Bulldog', 'Poodle'];\r\n        break;\r\n      case 'Hamster':\r\n        this.speciesOptions = ['Syrian', 'Dwarf Campbells Russian', 'Roborovski', 'Chinese', 'Winter White'];\r\n        break;\r\n      case 'Rabbit':\r\n        this.speciesOptions = ['Holland Lop', 'Mini Rex', 'Netherland Dwarf', 'Lionhead', 'Flemish Giant'];\r\n        break;\r\n      default:\r\n        this.speciesOptions = [];\r\n        break;\r\n    }\r\n  }\r\n\r\n  createAnimal(animal: Animal) {\r\n    console.log(\"Creating animal\")\r\n    console.log(animal.specie)\r\n    this.createdAnimal.nickname = animal.nickname\r\n    this.createdAnimal.animalType=animal.animalType\r\n    this.createdAnimal.specie=animal.specie\r\n    this.createdAnimal.age=animal.age\r\n    this.createdAnimal.weight=animal.weight\r\n    this.service.createAnimal(this.createdAnimal).subscribe(\r\n      response =>{\r\n        console.log(response)\r\n        this.router.navigate([\"/animals-list\"])\r\n      }\r\n    )\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FE/src/app/animal-list/create-animal/create-animal.component.ts b/../FE/src/app/animal-list/create-animal/create-animal.component.ts
--- a/../FE/src/app/animal-list/create-animal/create-animal.component.ts	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/../FE/src/app/animal-list/create-animal/create-animal.component.ts	(date 1702221709529)
@@ -12,6 +12,8 @@
 
   createdAnimal !: Animal
   speciesOptions: string[] = [];
+  selectedImage: File | null = null;
+  imagePreview: string | ArrayBuffer | null = null;
 
   constructor(
     private service : DataService,
@@ -20,7 +22,7 @@
   }
 
   ngOnInit(){
-    this.createdAnimal = new Animal(0, "", "", "", 0, 0)
+    this.createdAnimal = new Animal(0, "", "", "", 0, 0 , null)
   }
 
   updateSpecies() {
@@ -45,19 +47,39 @@
     }
   }
 
+
+  onFileSelected(event: any): void {
+    const file: File = event.target.files[0];
+    this.selectedImage = file;
+    this.previewImage();
+  }
+
+  previewImage(): void {
+    if (this.selectedImage) {
+      const reader = new FileReader();
+      reader.readAsDataURL(this.selectedImage);
+      reader.onload = () => {
+        this.imagePreview = reader.result;
+      };
+    } else {
+      this.imagePreview = null;
+    }
+  }
+
   createAnimal(animal: Animal) {
-    console.log("Creating animal")
-    console.log(animal.specie)
-    this.createdAnimal.nickname = animal.nickname
-    this.createdAnimal.animalType=animal.animalType
-    this.createdAnimal.specie=animal.specie
-    this.createdAnimal.age=animal.age
-    this.createdAnimal.weight=animal.weight
-    this.service.createAnimal(this.createdAnimal).subscribe(
-      response =>{
-        console.log(response)
-        this.router.navigate(["/animals-list"])
+    const formData: FormData = new FormData();
+    formData.append('animal', JSON.stringify(animal)); // Convert Animal object to JSON string
+    // @ts-ignore
+    formData.append('image', this.selectedImage);
+
+    console.log("Creating animal");
+    console.log(animal.specie);
+
+    this.service.createAnimal(formData).subscribe(
+      (response) => {
+        console.log(response);
+        this.router.navigate(["/animals-list"]);
       }
-    )
+    );
   }
 }
Index: animal-service/src/main/java/app/AnimalServiceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.ComponentScan;\r\n\r\n@SpringBootApplication\r\npublic class AnimalServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(AnimalServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/animal-service/src/main/java/app/AnimalServiceApplication.java b/animal-service/src/main/java/app/AnimalServiceApplication.java
--- a/animal-service/src/main/java/app/AnimalServiceApplication.java	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/animal-service/src/main/java/app/AnimalServiceApplication.java	(date 1702164024519)
@@ -2,7 +2,6 @@
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.context.annotation.ComponentScan;
 
 @SpringBootApplication
 public class AnimalServiceApplication {
Index: ../FE/src/app/animal-list/update-animal/update-animal.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Animal} from \"../animal-list.component\";\r\nimport {DataService} from \"../../service/data.service\";\r\n\r\n@Component({\r\n  selector: 'app-update-animal',\r\n  templateUrl: './update-animal.component.html',\r\n  styleUrls: ['./update-animal.component.css']\r\n})\r\nexport class UpdateAnimalComponent {\r\n\r\n  animal!:Animal\r\n\r\n  id!:number\r\n\r\n  constructor(\r\n    private service:DataService,\r\n    private route:ActivatedRoute,\r\n    private router:Router\r\n  ) {\r\n  }\r\n  ngOnInit(){\r\n    this.id=this.route.snapshot.params['id'];\r\n    this.animal = new Animal(0, \"\", \"\", \"\", 0, 0)\r\n    console.log(\"Din init update animal\")\r\n    this.service.retrieveAnimalById(this.id).subscribe(\r\n      response=>{\r\n        this.animal = new Animal(response.id,response.nickname,response.animalType,response.specie,response.age,response.weight);\r\n      }\r\n    )\r\n  }\r\n\r\n  updateAnimal(id:number){\r\n    console.log(\"UPDATING ANIMAL\")\r\n    this.service.updateAnimal(id,this.animal).subscribe(\r\n      response =>{\r\n        console.log(response);\r\n        this.router.navigate([\"animals-list\"])\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FE/src/app/animal-list/update-animal/update-animal.component.ts b/../FE/src/app/animal-list/update-animal/update-animal.component.ts
--- a/../FE/src/app/animal-list/update-animal/update-animal.component.ts	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/../FE/src/app/animal-list/update-animal/update-animal.component.ts	(date 1702220762961)
@@ -1,4 +1,4 @@
-import { Component } from '@angular/core';
+import {Component, OnInit} from '@angular/core';
 import {ActivatedRoute, Router} from "@angular/router";
 import {Animal} from "../animal-list.component";
 import {DataService} from "../../service/data.service";
@@ -8,10 +8,11 @@
   templateUrl: './update-animal.component.html',
   styleUrls: ['./update-animal.component.css']
 })
-export class UpdateAnimalComponent {
+export class UpdateAnimalComponent implements OnInit{
 
   animal!:Animal
-
+  selectedImage: File | null = null;
+  imagePreview: string | ArrayBuffer | null = null;
   id!:number
 
   constructor(
@@ -22,14 +23,34 @@
   }
   ngOnInit(){
     this.id=this.route.snapshot.params['id'];
-    this.animal = new Animal(0, "", "", "", 0, 0)
+    this.animal = new Animal(0, "", "", "", 0, 0, null)
     console.log("Din init update animal")
     this.service.retrieveAnimalById(this.id).subscribe(
       response=>{
-        this.animal = new Animal(response.id,response.nickname,response.animalType,response.specie,response.age,response.weight);
+        this.animal = new Animal(response.id,response.nickname,response.animalType,response.specie,response.age,response.weight,response.image)
       }
     )
   }
+
+
+
+  onFileSelected(event: any): void {
+    const file: File = event.target.files[0];
+    this.selectedImage = file;
+    this.previewImage();
+  }
+
+  previewImage(): void {
+    if (this.selectedImage) {
+      const reader = new FileReader();
+      reader.readAsDataURL(this.selectedImage);
+      reader.onload = () => {
+        this.imagePreview = reader.result;
+      };
+    } else {
+      this.imagePreview = null;
+    }
+  }
 
   updateAnimal(id:number){
     console.log("UPDATING ANIMAL")
Index: animal-service/src/main/java/app/entity/Animal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.entity;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Entity\r\n@Data\r\n@Builder\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Table(name = \"animal\")\r\npublic class Animal {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy= GenerationType.IDENTITY)\r\n    private int id;\r\n\r\n    private String nickname;\r\n\r\n    private String animalType;\r\n\r\n    private String specie;\r\n\r\n    private int age;\r\n\r\n    private double weight;\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/animal-service/src/main/java/app/entity/Animal.java b/animal-service/src/main/java/app/entity/Animal.java
--- a/animal-service/src/main/java/app/entity/Animal.java	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/animal-service/src/main/java/app/entity/Animal.java	(date 1702220273545)
@@ -28,4 +28,7 @@
 
     private double weight;
 
+    @Lob
+    private byte[] image;
+
 }
\ No newline at end of file
Index: doctor-service/src/main/java/app/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.service;\r\n\r\nimport app.DTO.LoginResponse;\r\nimport app.DTO.UserLoginDTO;\r\nimport app.entity.User;\r\nimport app.repository.UserRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.Base64;\r\nimport java.util.List;\r\n\r\n@Service\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class UserService {\r\n\r\n    public final UserRepository userRepository;\r\n\r\n    public List<User> getAllUsers() {\r\n        return userRepository.findAll();\r\n    }\r\n\r\n    public LoginResponse login(UserLoginDTO userToCheck) {\r\n        List<User> users = userRepository.findAll();\r\n\r\n        //Check  if the user only logged in with the username if not check if he logged in with the email\r\n        if (!userToCheck.getEmail().contains(\"@\")) {\r\n            for (User user : users) {\r\n                if (user.getUsername().equals(userToCheck.getEmail()) && user.getPassword().equals(userToCheck.getPassword())) {\r\n                    log.info(\"User \" + user.getUsername() + \" logged in\");\r\n                    return new LoginResponse(\"success\",\"Logged in\");\r\n                }\r\n            }\r\n        } else {\r\n            for (User user : users) {\r\n                if (user.getEmail().equals(userToCheck.getEmail()) && user.getPassword().equals(userToCheck.getPassword())) {\r\n                    log.info(\"User \" + user.getUsername() + \" logged in\");\r\n                    return new LoginResponse(\"success\",\"Logged in\");\r\n                }\r\n            }\r\n        }\r\n        return new LoginResponse(\"failed\",\"Wrong credentials\");\r\n    }\r\n\r\n\r\n    public String logout() {\r\n        return \"Logged out\";\r\n    }\r\n\r\n\r\n    public String getDecodedPassword(String encodedPassword) {\r\n        byte[] decodedPassword = Base64.getDecoder().decode(encodedPassword);\r\n        decodedPassword = new String(decodedPassword).getBytes();\r\n        return new String(decodedPassword);\r\n    }\r\n\r\n    public String getEncodedPassword(String decodedPassword) {\r\n        return Base64.getEncoder().encodeToString(decodedPassword.getBytes());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/doctor-service/src/main/java/app/service/UserService.java b/doctor-service/src/main/java/app/service/UserService.java
--- a/doctor-service/src/main/java/app/service/UserService.java	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/doctor-service/src/main/java/app/service/UserService.java	(date 1702219597186)
@@ -1,6 +1,7 @@
 package app.service;
 
 import app.DTO.LoginResponse;
+import app.DTO.LogoutResponse;
 import app.DTO.UserLoginDTO;
 import app.entity.User;
 import app.repository.UserRepository;
@@ -45,8 +46,9 @@
     }
 
 
-    public String logout() {
-        return "Logged out";
+    public LogoutResponse logout() {
+        log.info("User logged out");
+        return new LogoutResponse("success","Logged out");
     }
 
 
Index: animal-service/src/main/java/app/service/AnimalService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.service;\r\n\r\n\r\nimport app.entity.Animal;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\nimport app.repository.AnimalRepository;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Service\r\n@Slf4j\r\npublic class AnimalService {\r\n\r\n    private final AnimalRepository animalRepository;\r\n\r\n    public AnimalService(AnimalRepository animalRepository) {\r\n        this.animalRepository = animalRepository;\r\n    }\r\n\r\n    public Animal addAnimal(Animal animal) {\r\n        animalRepository.save(animal);\r\n        return animal;\r\n    }\r\n\r\n    public List<Animal> getAllAnimals() {\r\n        return animalRepository.findAll();\r\n    }\r\n\r\n     \r\n    public void deleteAnimal(int id) {\r\n        animalRepository.deleteById(id);\r\n    }\r\n\r\n     \r\n    public void updateAnimal(Animal animal, int id) {\r\n        animal.setId(id);\r\n        animalRepository.save(animal);\r\n    }\r\n\r\n    public Animal getAnimalById(int id) {\r\n        return animalRepository.findById(id).orElseThrow();\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/animal-service/src/main/java/app/service/AnimalService.java b/animal-service/src/main/java/app/service/AnimalService.java
--- a/animal-service/src/main/java/app/service/AnimalService.java	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/animal-service/src/main/java/app/service/AnimalService.java	(date 1702220625474)
@@ -5,6 +5,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
 import app.repository.AnimalRepository;
+import org.springframework.web.multipart.MultipartFile;
 
 import java.util.List;
 import java.util.Optional;
Index: ../FE/src/app/animal-list/update-animal/update-animal.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><h1 class=\"h1 text-center mt-3\">\r\n  UPDATE ANIMAL INFO\r\n</h1>\r\n<div class=\"container w-75 h-75\">\r\n  <form (ngSubmit)=\"!updateCreateForm.invalid && updateAnimal(id)\" #updateCreateForm=\"ngForm\">\r\n    <fieldset class=\"form-group justify-content-center text-center\">\r\n      <label>Nickname</label>\r\n      <input type=\"text\" [(ngModel)]=\"animal.nickname\" class=\"form-control text-center\" name=\"nickname\" required = \"required\" >\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label for=\"inputState\">Animal Type</label>\r\n      <select id=\"inputState\" class=\"form-control text-center\" name=\"animalType\" [(ngModel)]=\"animal.animalType\" required=\"required\" #animalType= \"ngModel\">\r\n        <option>Cat</option>\r\n        <option>Dog</option>\r\n        <option>Hamster</option>\r\n        <option>Rabbit</option>\r\n      </select>\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label>Specie</label>\r\n      <input type=\"text\" [(ngModel)]=\"animal.specie\" class=\"form-control text-center\" name=\"specie\" required = \"required\"  #specie = \"ngModel\">\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label>Age</label>\r\n      <input type=\"number\" [(ngModel)]=\"animal.age\" class=\"form-control text-center\" name=\"age\" required = \"required\"  #age = \"ngModel\">\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label>Weight</label>\r\n      <input type=\"number\" [(ngModel)]=\"animal.weight\" class=\"form-control text-center\" name=\"weight\" required = \"required\"  #weight = \"ngModel\">\r\n    </fieldset>\r\n    <br>\r\n    <div class=\"btn-group\">\r\n      <button class=\"btn btn-success \" type=\"submit\"> UPDATE </button>\r\n      <button class=\"btn btn-warning\" type=\"reset\"> RESET </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FE/src/app/animal-list/update-animal/update-animal.component.html b/../FE/src/app/animal-list/update-animal/update-animal.component.html
--- a/../FE/src/app/animal-list/update-animal/update-animal.component.html	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/../FE/src/app/animal-list/update-animal/update-animal.component.html	(date 1702220717120)
@@ -32,6 +32,14 @@
       <label>Weight</label>
       <input type="number" [(ngModel)]="animal.weight" class="form-control text-center" name="weight" required = "required"  #weight = "ngModel">
     </fieldset>
+    <fieldset class="form-group text-center">
+      <label>Picture</label>
+      <input type="file" (change)="onFileSelected($event)" accept="image/*" class="form-control text-center" name="image" required="required">
+      <div *ngIf="selectedImage" class="mt-2">
+        <img [src]="imagePreview" alt="Preview" class="img-thumbnail" style="max-width: 250px; max-height: 250px;">
+      </div>
+    </fieldset>
+    <br>
     <br>
     <div class="btn-group">
       <button class="btn btn-success " type="submit"> UPDATE </button>
Index: animal-service/src/main/java/app/controller/AnimalController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.controller;\r\n\r\nimport app.entity.Animal;\r\nimport app.service.AnimalService;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@Slf4j\r\n@RequiredArgsConstructor\r\n@RequestMapping(\"/animal-service\")\r\npublic class AnimalController {\r\n\r\n    private final AnimalService animalService;\r\n\r\n    @GetMapping(\"/get-all\")\r\n    public List<Animal> get(){\r\n        return animalService.getAllAnimals();\r\n    }\r\n\r\n    @PostMapping(\"/create\")\r\n    @ResponseStatus(HttpStatus.CREATED)\r\n    public Animal addAnimal(@RequestBody Animal animal){\r\n        return animalService.addAnimal(animal);\r\n    }\r\n\r\n    @DeleteMapping(\"/delete/{id}\")\r\n    public void deleteAnimal(@PathVariable int id){\r\n        animalService.deleteAnimal(id);\r\n    }\r\n\r\n    @PutMapping( \"/update/{id}\")\r\n    public void updateAnimal(@RequestBody Animal animal, @PathVariable int id) {\r\n        animalService.updateAnimal(animal,id);\r\n    }\r\n\r\n    @GetMapping(\"/get/{id}\")\r\n    public Animal getAnimalById(@PathVariable int id){\r\n        return animalService.getAnimalById(id);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/animal-service/src/main/java/app/controller/AnimalController.java b/animal-service/src/main/java/app/controller/AnimalController.java
--- a/animal-service/src/main/java/app/controller/AnimalController.java	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/animal-service/src/main/java/app/controller/AnimalController.java	(date 1702222327093)
@@ -2,11 +2,15 @@
 
 import app.entity.Animal;
 import app.service.AnimalService;
+import com.fasterxml.jackson.databind.ObjectMapper;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
+import org.springframework.web.multipart.MultipartFile;
 
+import java.io.IOException;
 import java.util.List;
 
 @RestController
@@ -22,10 +26,36 @@
         return animalService.getAllAnimals();
     }
 
+//    @PostMapping("/create")
+//    @ResponseStatus(HttpStatus.CREATED)
+//    public Animal addAnimal(@RequestBody Animal animal){
+//        return animalService.addAnimal(animal);
+//    }
+
     @PostMapping("/create")
-    @ResponseStatus(HttpStatus.CREATED)
-    public Animal addAnimal(@RequestBody Animal animal){
-        return animalService.addAnimal(animal);
+    public ResponseEntity<Animal> addAnimal(
+            @RequestPart("animal") String animalJson,
+            @RequestPart(value = "image", required = false) MultipartFile image) {
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        Animal animal;
+        try {
+            animal = objectMapper.readValue(animalJson, Animal.class);
+        } catch (IOException e) {
+            return new ResponseEntity<>("Error parsing animal JSON", HttpStatus.BAD_REQUEST);
+        }
+
+        if (image != null && !image.isEmpty()) {
+            try {
+                animal.setImage(image.getBytes());
+            } catch (IOException e) {
+                return new ResponseEntity<>("Error processing image", HttpStatus.INTERNAL_SERVER_ERROR);
+            }
+        }
+
+        Animal createdAnimal = animalService.addAnimal(animal);
+
+        return new ResponseEntity<>(createdAnimal, HttpStatus.CREATED);
     }
 
     @DeleteMapping("/delete/{id}")
Index: ../FE/src/app/animal-list/animal-list.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Component} from '@angular/core';\r\nimport {DataService} from \"../service/data.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\nexport class Animal {\r\n  constructor(\r\n    public id: number,\r\n    public nickname: string,\r\n    public animalType: string,\r\n    public specie: string,\r\n    public age: number,\r\n    public weight: number\r\n  ) {\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-animal-list',\r\n  templateUrl: './animal-list.component.html',\r\n  styleUrls: ['./animal-list.component.css']\r\n})\r\nexport class AnimalListComponent {\r\n\r\n  deleteMessage : string = ''\r\n\r\n  animals: Animal[] | any\r\n\r\n  constructor(\r\n    public service: DataService,\r\n    public router:Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refreshPage()\r\n  }\r\n\r\n  refreshPage() {\r\n    this.service.getAllAnimals().subscribe(\r\n      response => {\r\n        console.log(response)\r\n        this.animals=response\r\n    },error => {\r\n        console.log(\"An error has occured in Animal List refresh page\")\r\n      })\r\n  }\r\n\r\n  deleteAnimal(id : number) {\r\n    console.log(`DELETEING ANIMAL WITH ID OF ${id}`);\r\n    this.service.deleteAnimal(id).subscribe(\r\n      response =>{\r\n        console.log(\"DELETING\")\r\n        this.deleteMessage = \"DELETED SUCCESSFULLY\"\r\n        this.refreshPage();\r\n        this.changeDeleteMessageInstantly()\r\n      },error =>{\r\n        console.log(\"An error has occured in delete animal\")\r\n        this.deleteMessage = \"AN ERROR HAS OCCURED\"\r\n      }\r\n    )\r\n  }\r\n\r\n  updateAnimal(id : number) {\r\n    console.log(\"UPDATING DOCTOR\");\r\n    this.router.navigate([\"update-animal\" , id])\r\n  }\r\n\r\n  createAnimal() {\r\n    console.log(\"Creating animal\")\r\n  }\r\n\r\n  changeDeleteMessageInstantly(){\r\n    setTimeout(() =>{\r\n      this.deleteMessage = '';\r\n    },2000)\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FE/src/app/animal-list/animal-list.component.ts b/../FE/src/app/animal-list/animal-list.component.ts
--- a/../FE/src/app/animal-list/animal-list.component.ts	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/../FE/src/app/animal-list/animal-list.component.ts	(date 1702220442105)
@@ -9,7 +9,8 @@
     public animalType: string,
     public specie: string,
     public age: number,
-    public weight: number
+    public weight: number,
+    public image : any
   ) {
   }
 }
Index: ../FE/src/app/menu/menu.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><header>\r\n  <nav class = \"navbar navbar-expand-md navbar-dark bg-dark\" >\r\n    <div><a href=\"https://www.linkedin.com/in/gherguț-mădălin-740999237/\" class=\"navbar-brand logo\"> Connect with me </a></div>\r\n    <ul class=\"navbar-nav\">\r\n      <li><a *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/doctors-list\">DOCTORS</a></li>\r\n      <li><a *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/animals-list\">ANIMALS</a></li>\r\n      <li><a *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/consultations\">CONSULTATIONS</a></li>\r\n      <li><a *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/prescriptions\">PRESCRIPTIONS</a></li>\r\n      <li><a *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/workingHours\">WORKING HOURS</a></li>\r\n      <li><a *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\" class=\"nav-link\" routerLink=\"/users-list\">USERS</a></li>\r\n    </ul>\r\n    <ul class=\"navbar-nav navbar-collapse justify-content-end\">\r\n      <li><a class=\"nav-link\" *ngIf=\"!hardcodedAuthentificationService.isUserLoggedIn()\"  routerLink=\"/login\" >LOGIN</a></li>\r\n      <li><a class=\"nav-link\" *ngIf=\"hardcodedAuthentificationService.isUserLoggedIn()\"  routerLink=\"/logout\">LOGOUT</a></li>\r\n    </ul>\r\n  </nav>\r\n</header>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FE/src/app/menu/menu.component.html b/../FE/src/app/menu/menu.component.html
--- a/../FE/src/app/menu/menu.component.html	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/../FE/src/app/menu/menu.component.html	(date 1702219459156)
@@ -11,7 +11,7 @@
     </ul>
     <ul class="navbar-nav navbar-collapse justify-content-end">
       <li><a class="nav-link" *ngIf="!hardcodedAuthentificationService.isUserLoggedIn()"  routerLink="/login" >LOGIN</a></li>
-      <li><a class="nav-link" *ngIf="hardcodedAuthentificationService.isUserLoggedIn()"  routerLink="/logout">LOGOUT</a></li>
+      <li><a class="nav-link" *ngIf="hardcodedAuthentificationService.isUserLoggedIn()"  routerLink="/logout" >LOGOUT</a></li>
     </ul>
   </nav>
 </header>
Index: doctor-service/src/main/java/app/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.controller;\r\n\r\nimport app.DTO.LoginResponse;\r\nimport app.DTO.UserLoginDTO;\r\nimport app.entity.User;\r\nimport app.service.UserService;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@Slf4j\r\n@RequiredArgsConstructor\r\n@RequestMapping(\"/user-service\")\r\npublic class UserController {\r\n\r\n    private final UserService userService;\r\n\r\n    @GetMapping(\"/get-all\")\r\n    public List<User> getUsers(){\r\n       return userService.getAllUsers();\r\n    }\r\n\r\n    @PostMapping(\"/login\")\r\n    @ResponseStatus(HttpStatus.OK)\r\n    public LoginResponse login(@RequestBody UserLoginDTO userLoginDTO){\r\n        return userService.login(userLoginDTO);\r\n    }\r\n\r\n    @GetMapping(\"/logout\")\r\n    @ResponseStatus(HttpStatus.OK)\r\n    public String logout(){\r\n        return userService.logout();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/doctor-service/src/main/java/app/controller/UserController.java b/doctor-service/src/main/java/app/controller/UserController.java
--- a/doctor-service/src/main/java/app/controller/UserController.java	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/doctor-service/src/main/java/app/controller/UserController.java	(date 1702219545136)
@@ -1,6 +1,7 @@
 package app.controller;
 
 import app.DTO.LoginResponse;
+import app.DTO.LogoutResponse;
 import app.DTO.UserLoginDTO;
 import app.entity.User;
 import app.service.UserService;
@@ -32,7 +33,7 @@
 
     @GetMapping("/logout")
     @ResponseStatus(HttpStatus.OK)
-    public String logout(){
+    public LogoutResponse logout(){
         return userService.logout();
     }
 
Index: ../FE/src/app/animal-list/create-animal/create-animal.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><h1 class=\"h1 text-center mt-3\">\r\n  REGISTER ANIMAL\r\n</h1>\r\n<div class=\"container w-75 h-75\">\r\n  <form (ngSubmit)=\"!animalCreateForm.invalid && createAnimal(createdAnimal)\" #animalCreateForm=\"ngForm\">\r\n    <fieldset class=\"form-group justify-content-center text-center\">\r\n      <label>Nickname</label>\r\n      <input type=\"text\" [(ngModel)]=\"createdAnimal.nickname\" class=\"form-control text-center\" name=\"nickname\" required=\"required\">\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label for=\"inputState\">Animal Type</label>\r\n      <select id=\"inputState\" class=\"form-control text-center\" name=\"animalType\" [(ngModel)]=\"createdAnimal.animalType\" required=\"required\" (change)=\"updateSpecies()\">\r\n        <option>Cat</option>\r\n        <option>Dog</option>\r\n        <option>Hamster</option>\r\n        <option>Rabbit</option>\r\n      </select>\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label>Species</label>\r\n      <select [(ngModel)]=\"createdAnimal.specie\" class=\"form-control text-center\" name=\"specie\" required=\"required\">\r\n        <option *ngFor=\"let species of speciesOptions\" [value]=\"species\">{{ species }}</option>\r\n      </select>\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label>Age</label>\r\n      <input type=\"number\" [(ngModel)]=\"createdAnimal.age\" class=\"form-control text-center\" name=\"age\" required=\"required\">\r\n    </fieldset>\r\n    <br>\r\n    <fieldset class=\"form-group text-center\">\r\n      <label>Weight(kg)</label>\r\n      <input type=\"number\" [(ngModel)]=\"createdAnimal.weight\" class=\"form-control text-center\" name=\"weight\" required=\"required\">\r\n    </fieldset>\r\n    <br>\r\n    <div class=\"btn-group\">\r\n      <button class=\"btn btn-success\" type=\"submit\"> SAVE </button>\r\n      <button class=\"btn btn-warning\" type=\"reset\"> RESET </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../FE/src/app/animal-list/create-animal/create-animal.component.html b/../FE/src/app/animal-list/create-animal/create-animal.component.html
--- a/../FE/src/app/animal-list/create-animal/create-animal.component.html	(revision 502593dac03bc5e0ac30a23c0a54f8008b3c99a4)
+++ b/../FE/src/app/animal-list/create-animal/create-animal.component.html	(date 1702221154174)
@@ -35,6 +35,14 @@
       <input type="number" [(ngModel)]="createdAnimal.weight" class="form-control text-center" name="weight" required="required">
     </fieldset>
     <br>
+    <fieldset class="form-group text-center">
+      <label>Picture</label>
+      <input type="file" (change)="onFileSelected($event)" [(ngModel)]="createdAnimal.image" accept="image/*" class="form-control text-center" name="image" required="required">
+      <div *ngIf="selectedImage" class="mt-2">
+        <img [src]="imagePreview" [(ngModel)]="createdAnimal.image" alt="Preview" class="img-thumbnail" style="max-width: 250px; max-height: 250px;">
+      </div>
+    </fieldset>
+    <br>
     <div class="btn-group">
       <button class="btn btn-success" type="submit"> SAVE </button>
       <button class="btn btn-warning" type="reset"> RESET </button>
